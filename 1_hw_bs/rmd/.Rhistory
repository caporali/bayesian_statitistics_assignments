geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "green2", linetype = 4)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 4)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "green3", linetype = 4)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 4)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse2", linetype = 4)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 4)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse2", linetype = 1)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
geom_text(aes(mean(y.a), 0.5, label = "empirical mean", hjust = +1.5, col = "chartreuse3"))
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
geom_text(aes(mean(y.a), 0.5, label = "empirical mean", hjust = +1.5, col = "chartreuse3"))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
geom_text(aes(mean(y.b), 0.5, label = "empirical mean", hjust = +1.5, col = "orange"))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
geom_text(aes(mean(y.a), 0.5, label = "empirical mean", hjust = +0.5, col = "chartreuse3"))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
geom_text(aes(mean(y.b), 0.5, label = "empirical mean", hjust = +0.5, col = "orange"))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
geom_text(aes(mean(y.a), 0.5, label = "empirical mean", hjust = +1.0, col = "chartreuse3"))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
geom_text(aes(mean(y.b), 0.5, label = "empirical mean", hjust = +1.0, col = "orange"))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
geom_text(aes(mean(y.a), 0.5, label = "empirical mean", hjust = +1.0))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
geom_text(aes(mean(y.b), 0.5, label = "empirical mean", hjust = +1.0))+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
cat(paste("Posterior of A : Gamma(", a_n, ",", b_n, ") \n",  "Posterior of B : Gamma(", c_n, ",", d_n, ") \n"))
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior densities
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
geom_vline(xintercept = mean(y.a), col = "chartreuse3", linetype = 1)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
geom_vline(xintercept = mean(y.b), col = "orange", linetype = 1)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
