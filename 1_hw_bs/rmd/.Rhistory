sprintf("\\textcolor{%s}{%s}", color, x)
else if (knitr::is_html_output())
sprintf('<span style = "color: %s;">%s</span>', color, x)
else x
}
indicator <- function() {
if (knitr::is_latex_output())
sprintf("\\indicator")
else if (knitr::is_html_output())
sprintf("1")
else "1"
}
newline <- function() {
if (knitr::is_latex_output())
sprintf("\\")
else if (knitr::is_html_output())
sprintf("<br>")
else ""
}
library(ggplot2)
dgalenshore = function(y, a, theta) {
(2 / gamma(a)) * theta^(2 * a) * y^(2 * a - 1) * exp(-(theta^2) * y^2)
}
y = seq(0.01, 3.5, length = 1000)
df = rbind(
data.frame(y = y, gal_y = dgalenshore(y, 2, 1), label = "(2, 1)"),
data.frame(y = y, gal_y = dgalenshore(y, 3, sqrt(2)), label = "(3, sqrt(2))"),
data.frame(y = y, gal_y = dgalenshore(y, 3, 2), label = "(3, 2)"),
data.frame(y = y, gal_y = dgalenshore(y, 5, 2), label = "(5, 2)"),
data.frame(y = y, gal_y = dgalenshore(y, 4, 3), label = "(4, 3)"),
data.frame(y = y, gal_y = dgalenshore(y, 4, 4), label = "(4, 4)")
)
ggplot(df, aes(y, gal_y, group = label, color = label)) +
geom_line() + coord_fixed(ratio = 1)
load(file = 'dataAssignment1.RData')
knitr::opts_chunk$set(echo = TRUE)
colorize <- function(x, color) {
if (knitr::is_latex_output())
sprintf("\\textcolor{%s}{%s}", color, x)
else if (knitr::is_html_output())
sprintf('<span style = "color: %s;">%s</span>', color, x)
else x
}
indicator <- function() {
if (knitr::is_latex_output())
sprintf("\\indicator")
else if (knitr::is_html_output())
sprintf("1")
else "1"
}
newline <- function() {
if (knitr::is_latex_output())
sprintf("\\")
else if (knitr::is_html_output())
sprintf("<br>")
else ""
}
library(ggplot2)
dgalenshore = function(y, a, theta) {
(2 / gamma(a)) * theta^(2 * a) * y^(2 * a - 1) * exp(-(theta^2) * y^2)
}
y = seq(0.01, 3.5, length = 1000)
df = rbind(
data.frame(y = y, gal_y = dgalenshore(y, 2, 1), label = "(2, 1)"),
data.frame(y = y, gal_y = dgalenshore(y, 3, sqrt(2)), label = "(3, sqrt(2))"),
data.frame(y = y, gal_y = dgalenshore(y, 3, 2), label = "(3, 2)"),
data.frame(y = y, gal_y = dgalenshore(y, 5, 2), label = "(5, 2)"),
data.frame(y = y, gal_y = dgalenshore(y, 4, 3), label = "(4, 3)"),
data.frame(y = y, gal_y = dgalenshore(y, 4, 4), label = "(4, 4)")
)
ggplot(df, aes(y, gal_y, group = label, color = label)) +
geom_line() + coord_fixed(ratio = 1)
load(file = 'dataAssignment1.RData')
library(tidyverse)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
#posterior parameters
a_n = 120.0 + sum(y.a)
b_n = 10.0 + length(y.a)
c_n = 12 + sum(y.b)
d_n = 1 + length(y.b)
sprintf("posterior of A : Gamma(%i, %i)", a_n, b_n)
sprintf("posterior of B : Gamma(%i, %i)", c_n, d_n)
#posterior means
mean_A = a_n / b_n
mean_B = c_n / d_n
#posterior density and quantile interval for A
y.a.sum = sum(y.a)
n.a = length(y.a)
alpha = 0.05
gamma.values = seq(0, 20, length= 200)
quant.interval.a = qgamma(c(alpha/2,1-alpha/2), shape = a_n, rate = b_n)
quant.interval.b = qgamma(c(alpha/2,1-alpha/2), shape = c_n, rate = d_n)
post.values.a = dgamma(gamma.values, a_n, b_n)
post.values.b = dgamma(gamma.values, c_n, d_n)
post.data = data.frame(gamma.values, post.values.a, post.values.b)
#posterior density plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col = "red", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_A, col = "red", linetype = 2)+
scale_color_discrete(guide = "none") -> p1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none") -> p2
p3 <- p1 +
geom_line(aes(x = gamma.values, y = post.values.b), col = "blue", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = mean_B, col = "blue", linetype = 2)+
scale_color_discrete(guide = "none")+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta,"|",y,")")))+
ggtitle("Posterior probability densities")
p1 <- p1 +
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[A])))
p2 <- p2 +
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Posterior probability density of ", theta[B])))
grid.arrange(arrangeGrob(p1, p2, ncol = 2), p3, nrow = 2)
#quantile-based intervals plots
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.a), col="darkgreen", alpha = 0.6, size=1.2)+
geom_vline(xintercept = quant.interval.a[1], col = "darkgreen")+
geom_vline(xintercept = quant.interval.a[2], col = "darkgreen")+
geom_rect(aes(xmin = quant.interval.a[1], xmax = quant.interval.a[2], ymin = -Inf, ymax = Inf), fill = "green", alpha = 0.002)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[A],"|",y[A],")")))+
ggtitle(expression(paste("Quantile-based 95% - interval of ", theta[A])))+
scale_color_discrete(guide = "none") ->q1
post.data %>% ggplot()+
geom_line(aes(x = gamma.values, y = post.values.b), col = "darkorange", alpha = 0.6, size = 1.2)+
geom_vline(xintercept = quant.interval.b[1], col = "darkorange")+
geom_vline(xintercept = quant.interval.b[2], col = "darkorange")+
geom_rect(aes(xmin = quant.interval.b[1], xmax = quant.interval.b[2], ymin = -Inf, ymax = Inf), fill = "orange", alpha = 0.002)+
xlab(expression(theta)) +
ylab(expression(paste("p(",theta[B],"|",y[B],")")))+
ggtitle(expression(paste("Quantile-based 95% - interval of ", theta[B])))+
scale_color_discrete(guide = "none") -> q2
grid.arrange(q1, q2, nrow = 2)
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot(aes(t1))+
geom_histogram( bins = 100)+
geom_vline(xintercept = t2, col = "sample mean", size = 1.2) +
geom_vline(xintercept = mean(t1), col = "data mean", size = 1.2)+
labs(x = "t", y = "counts", color = "Legend")+
scale_color_manual(values = colors)
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot(aes(t1))+
geom_histogram( bins = 100)+
geom_vline(xintercept = t2, col = "sample mean", size = 1.2) +
geom_vline(xintercept = mean(t1), col = "data mean", size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red", "protaminepercentage" = "orange"),
labels = c("sample mean", "data mean", "protaminepercentage"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot(aes(t1))+
geom_histogram( bins = 100)+
geom_vline(aes(col = "sample mean"),xintercept = t2, size = 1.2) +
geom_vline(aes(ol = "data mean"), xintercept = mean(t1), size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red", "protaminepercentage" = "orange"),
labels = c("sample mean", "data mean", "protaminepercentage"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot(aes(t1))+
geom_histogram( bins = 100)+
geom_vline(aes(col = "sample mean"),xintercept = t2, size = 1.2) +
geom_vline(aes(ol = "data mean"), xintercept = mean(t1), size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red", "protaminepercentage" = "orange"),
labels = c("sample mean", "data mean", "protaminepercentage"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot(aes(t1))+
geom_histogram( bins = 100)+
geom_vline(aes(col = "sample mean"),xintercept = t2, size = 1.2) +
geom_vline(aes(col = "data mean"), xintercept = mean(t1), size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red", "protaminepercentage" = "orange"),
labels = c("sample mean", "data mean", "protaminepercentage"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot(aes(t1))+
geom_histogram( bins = 100)+
geom_vline(aes(col = "sample mean"),xintercept = t2, size = 1.2) +
geom_vline(aes(col = "data mean"), xintercept = mean(t1), size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red"),
labels = c("sample mean", "data mean"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot()+
geom_histogram(aes(t1), bins = 100)+
geom_vline(aes(col = "sample mean"),xintercept = t2, size = 1.2) +
geom_vline(aes(col = "data mean"), xintercept = mean(t1), size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red"),
labels = c("sample mean", "data mean"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot()+
geom_histogram(aes(t1), bins = 100)+
geom_vline(aes(xintercept = t2, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t1), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Group",
values = c( "sample mean" = "blue", "data mean" = "red"),
labels = c("sample mean", "data mean"))
#generating the samples case theta[A]
K = 1000
sample.theta.a = rgamma(K, a_n, b_n)
t1 = rep(0, K)
for (i in 1:K){
post.pred.a = rpois(10, sample.theta.a[i])
t1[i] = sum(post.pred.a) / (10*sd(post.pred.a))
}
t2 =  sum(y.a) / (10*sd(y.a))
t.a <- data.frame(1:K, t1)
colors <- c("data mean" = "blue", "sample mean" = "red")
t.a %>% ggplot()+
geom_histogram(aes(t1), bins = 100)+
geom_vline(aes(xintercept = t2, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t1), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 100)+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 100, col = "purple")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 100, col = "violet")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 100, col = "lilac")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, col = "purple")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "purple")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "violet")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "darkviolet")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "darkviolet", alpha = 0.6)+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "purple", alpha = 0.6)+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "purple", alpha = 0.6, col = "grey")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "darkpurple", alpha = 0.6, col = "grey")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "darkviolet", alpha = 0.6, col = "grey")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
#generating the samples case theta[B]
K = 1000
sample.theta.b = rgamma(K, c_n, d_n)
t3 = rep(0, K)
for (i in 1:K){
post.pred.b = rpois(10, sample.theta.b[i])
t3[i] = sum(post.pred.a) / (10*sd(post.pred.b))
}
t4 =  sum(y.a) / (10*sd(y.a))
t.b <- data.frame(1:K, t3)
t.b %>% ggplot()+
geom_histogram(aes(t3), bins = 50, fill = "darkorchid", alpha = 0.6, col = "grey")+
geom_vline(aes(xintercept = t4, col = "sample mean"), size = 1.2) +
geom_vline(aes( xintercept = mean(t3), col = "data mean"), size = 1.2)+
scale_color_manual(name = "Legend", values = c( "sample mean" = "blue", "data mean" = "red"),labels = c("sample mean", "data mean"))
